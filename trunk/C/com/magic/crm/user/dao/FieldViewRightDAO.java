package com.magic.crm.user.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.HashMap;

import com.magic.crm.user.entity.FieldView;

/**
 * Jdbc Bean Class<br>
 * <br>
 * Autogenerated on 03/17/2003 10:36:03<br>
 * &nbsp;&nbsp;&nbsp; table = "crm_field_rights"
 * 
 * @author Generator
 */
public class FieldViewRightDAO {
	
    public static int getFieldRightCount(Connection con, int userId) throws SQLException  {
        PreparedStatement pstmt = null;
		ResultSet rs = null;
		int cnt = 0;
		String sql = "SELECT count(distinct a.field_name) FROM crm_field_rights a "
		    + "inner join CRM_USERROLE b on a.role_id = b.roleid "
		    + "where a.is_view = 0 and b.id = ? order by a.form_name ";
		try {
		    pstmt = con.prepareStatement(sql);
			pstmt.setInt(1, userId);
			rs = pstmt.executeQuery();
			if(rs.next()) {
			    cnt = rs.getInt(1);
			}
			return cnt;
		} finally {
			if (rs != null)
				try {
					rs.close();
				} catch (Exception e) {
				}
			if (pstmt != null)
				try {
					pstmt.close();
				} catch (Exception e) {
				}
		}
    }
    
	public static Map getFieldRightMap(Connection con, int userId) throws SQLException {
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		Map map = new HashMap();
		List list = null;
		String firstFormName = null;
		String sQuery = "SELECT distinct a.form_name, a.field_name FROM crm_field_rights a "
		    + "inner join CRM_USERROLE b on a.role_id = b.roleid "
		    + "where a.is_view = 0 and b.id = ? order by a.form_name ";
		
		try {
			pstmt = con.prepareStatement(sQuery);
			pstmt.setInt(1, userId);
			rs = pstmt.executeQuery();
			int i= 0;
			while (rs.next()) {
				i ++;
				if(i == 1) { //is the first one
					firstFormName = rs.getString("form_name");
					list = new ArrayList();
				}
				String formName = rs.getString("form_name");
				String fieldName = rs.getString("field_name");
				FieldView field = new FieldView();
				field.setFormName(formName);
				field.setFieldName(fieldName);
				
				if (formName.equals(firstFormName)) {//is the same form name
					list.add(field);
					
				} else {
				    map.put(firstFormName, list);
				    list = new ArrayList();
					firstFormName = rs.getString("form_name"); //get the next form name
					list.add(field);
					
				}
				if(getFieldRightCount(con, userId) == i) {//is the last one
				    map.put(firstFormName, list);
				}
			} 

			return map;
		}  finally {
			if (rs != null)
				try {
					rs.close();
				} catch (Exception e) {
				}
			if (pstmt != null)
				try {
					pstmt.close();
				} catch (Exception e) {
				}
		}

	}
}
