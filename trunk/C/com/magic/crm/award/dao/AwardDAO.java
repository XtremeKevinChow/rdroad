package com.magic.crm.award.dao;


import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.*;
import java.math.*;
import com.magic.crm.award.form.AwardForm;


/**
 * Jdbc Bean Class<br>
 * <br>
 * Autogenerated on 03/17/2003 10:36:03<br>
 * &nbsp;&nbsp;&nbsp; table = "users"
*
* @author Generator
*/
public class AwardDAO implements java.io.Serializable {


   public AwardForm findByPrimaryKey(Connection con,int id) throws SQLException {
       PreparedStatement pstmt = null;
       ResultSet rs = null;

       AwardForm af = new AwardForm();
       try {
          String sQuery = "select * from mbr_get_award where id=?";
          pstmt = con.prepareStatement(sQuery);

          pstmt.setInt(1,id);

          rs = pstmt.executeQuery();

          if (rs.next()) {
          	    af.setId(id);
          	    af.setAmountExp(rs.getDouble("USED_AMOUNT_EXP"));
          	 	af.setMemberID(rs.getInt("MEMBER_ID"));
          	 	af.setSellType(rs.getInt("type"));
              
          } else {
             return null;
          }
       } catch (SQLException e) {
         throw e;
       } finally {
          if (rs != null)
             try { rs.close(); } catch (Exception e) {}
          if (pstmt != null)
             try { pstmt.close(); } catch (Exception e) {}
       }
       return af;
   }

   
   
   
   
   public void updateStatus(Connection con, int status,int id) throws SQLException {
      PreparedStatement pstmt = null;
      
      try {
         String sQuery = "UPDATE mbr_get_award set status = ?  WHERE id=?";
         pstmt = con.prepareStatement(sQuery);
         pstmt.setInt(1,status);
         pstmt.setInt(2,id);
         pstmt.execute();

       } catch (SQLException e) {
          throw e;
       } finally {
          if (pstmt != null)
             try { pstmt.close(); } catch (Exception e) {}
       }
   }
   
}
