package com.magic.crm.product.dao;


import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;


/**
 * Jdbc Bean Class<br>
 * <br>
 * Autogenerated on 03/10/2005 01:53:42<br>
 * &nbsp;&nbsp;&nbsp; table = "prd_Item_Sets"
*
* @author Generator
*/
public class ProductSetItemDAO implements java.io.Serializable {


   public void findByPrimaryKey(Connection con, com.magic.crm.product.form.ProductSetItemForm pk) throws SQLException { 
       PreparedStatement pstmt = null;
       ResultSet rs = null;

       try {
          String sQuery = "SELECT set_item_id, part_item_id, common_price, card_price, web_price, id FROM prd_Item_Sets WHERE ";
          pstmt = con.prepareStatement(sQuery);


          rs = pstmt.executeQuery();

          if (rs.next()) {
              pk.setSilverPrice(rs.getFloat("common_price"));
              pk.setGodenPrice(rs.getFloat("card_price"));
              pk.setWebPrice(rs.getFloat("web_price"));
          } 
       } catch (SQLException e) {
         throw e;
       } finally {
          if (rs != null)
             try { rs.close(); } catch (Exception e) {}
          if (pstmt != null)
             try { pstmt.close(); } catch (Exception e) {}
       }
       
   }

   public void insert(Connection con, com.magic.crm.product.form.ProductSetItemForm info) throws SQLException { 
      PreparedStatement pstmt = null;        

      try {
         String sQuery = "INSERT INTO prd_Item_Sets(set_item_id, part_item_id, common_price, card_price, web_price, id) VALUES(?, ?, ?, ?, ?, ?)";
         pstmt = con.prepareStatement(sQuery);

         pstmt.setFloat(3, info.getSilverPrice());
         pstmt.setFloat(4, info.getGodenPrice());
         pstmt.setFloat(5, info.getWebPrice());

         pstmt.execute();

         con.commit();
       } catch (SQLException e) {
          if (con != null)
             try { con.rollback(); } catch (Exception ex) {}
          throw e;
       } finally {
          if (pstmt != null)
             try { pstmt.close(); } catch (Exception e) {}
       }
   }

   public void update(Connection con, com.magic.crm.product.form.ProductSetItemForm info) throws SQLException { 
      PreparedStatement pstmt = null;        

      try {
         String sQuery = "UPDATE prd_Item_Sets SET set_item_id=?, part_item_id=?, common_price=?, card_price=?, web_price=?, id=? WHERE ";
         pstmt = con.prepareStatement(sQuery);

         pstmt.setFloat(3, info.getSilverPrice());
         pstmt.setFloat(4, info.getGodenPrice());
         pstmt.setFloat(5, info.getWebPrice());

         pstmt.execute();

         con.commit();
       } catch (SQLException e) {
          if (con != null)
             try { con.rollback(); } catch (Exception ex) {}
          throw e;
       } finally {
          if (pstmt != null)
             try { pstmt.close(); } catch (Exception e) {}
       }
   }

   public void delete(Connection con, com.magic.crm.product.form.ProductSetItemForm info) throws SQLException { 
      PreparedStatement pstmt = null;        

      try {
         String sQuery = "DELETE prd_Item_Sets WHERE ";
         pstmt = con.prepareStatement(sQuery);


         pstmt.execute();

         con.commit();
       } catch (SQLException e) {
          if (con != null)
             try { con.rollback(); } catch (Exception ex) {}
          throw e;
       } finally {
          if (pstmt != null)
             try { pstmt.close(); } catch (Exception e) {}
       }
   }


}
