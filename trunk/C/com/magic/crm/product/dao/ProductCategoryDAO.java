package com.magic.crm.product.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList; 

import org.apache.log4j.Logger;

import com.magic.crm.common.CommonPageUtil;
import com.magic.crm.product.entity.ProductCategory;
import com.magic.crm.product.form.ProductCategoryForm;
import com.magic.crm.util.KeyValue;


/**
 * Jdbc Bean Class<br>
 * <br>
 * Autogenerated on 01/28/2005 06:41:59<br>
 * &nbsp;&nbsp;&nbsp; table = "prd_item_category"
*
* @author zhux
*/
public class ProductCategoryDAO implements java.io.Serializable {
	
	private static Logger log = Logger.getLogger("ProductCategoryDAO.class");
	
	/**
	 * 分类查询
	 * @param con
	 * @param pageModel
	 * @return
	 * @throws Exception
	 */
	public CommonPageUtil query(Connection con,CommonPageUtil pageModel) throws Exception   {

		PreparedStatement pstmt = null;
	       
	    ResultSet rs = null;

	    ArrayList list = new ArrayList();
	    try {
	           
	    	String prdCatCode = (String)pageModel.getCondition().get("prdCatCode");
	        String prdCatName = (String)pageModel.getCondition().get("prdCatName");
	    	String sql = "select count(*) from PRD_ITEM_CATEGORY where 1 =1  ";
	        String sQuery = "select CATALOG_ID,CATALOG_CODE,CATALOG_NAME from PRD_ITEM_CATEGORY where 1 =1 ";
	        String sqlCondition = "";
	        if(prdCatCode != null && ! prdCatCode.equals("")) {
	        	sqlCondition = " and catalog_code = '" + prdCatCode + "'";
	        }
	        if(prdCatName != null && ! prdCatName.equals("")) {
	        	sqlCondition = " and catalog_name like '%" + prdCatName + "%'";
	        }
	        sql = sql + sqlCondition;

	        pstmt = con.prepareStatement(sql);
	        rs = pstmt.executeQuery();
	        int recordCount = 0;
	        if(rs.next()){
	        	recordCount = rs.getInt(1);
	        }
	        rs.close();
	        pageModel.setRecordCount(recordCount);
	        sQuery = sQuery + sqlCondition;
	        pstmt = con.prepareStatement(sQuery);
	        rs = pstmt.executeQuery();
	        int recNo = 0;

	        while (rs.next()) {
	        	if(recNo >= pageModel.getFrom() && recNo <= pageModel.getTo()){   	
		        	ProductCategory info = new ProductCategory();
			        info.setCatalogID(rs.getString("catalog_id"));
			        info.setCatalogCode(rs.getString("catalog_code"));
			        info.setCatalogName(rs.getString("catalog_name"));
			        list.add(info);
	        	}
	           	
	       }
	       pageModel.setModelList(list);
	       } catch (SQLException e) {
	           //System.out.println(e);
	           throw e;
	       } finally {
	           if (rs != null)
	               try { rs.close(); } catch (Exception e) {}
	           if (pstmt != null)
	               try { pstmt.close(); } catch (Exception e) {}
	       }
	       return pageModel;
	   }
	
	/**
	 * 列出主要分类
	 * @param conn
	 * @return
	 * @throws Exception
	 */
	public static ArrayList listMainCates(Connection conn)throws Exception {
		ArrayList ret = new ArrayList();
		PreparedStatement ps = conn.prepareStatement(
				"select catalog_id,catalog_name from prd_item_category where parent_id=100");
		try {
			ResultSet rs = ps.executeQuery();
			while (rs.next()) {
				KeyValue cat = new KeyValue();
				cat.setId(rs.getInt("catalog_id"));
				cat.setName(rs.getString("catalog_name"));
				
				ret.add(cat);
			}
			rs.close();
		} finally {
			try {ps.close();} catch(Exception e) {}
		}
		return ret;
	}
	
	/**
	 * 列出产品和分类对应关系
	 * @param conn
	 * @return
	 * @throws Exception
	 */
	public static ArrayList listItemCategory(Connection conn, ProductCategoryForm fm)throws Exception {
		ArrayList ret = new ArrayList();
		
		String sql = "select t1.itm_code,t2.itm_name,t3.catalog_code,t3.catalog_name " +
				" from prd_item_category_map t1 left join prd_item t2 on t1.itm_code= t2.itm_code " +
				" left join prd_item_category t3 on t1.category_id = t3.catalog_id ";
		String sql1 = sql + "where t1.itm_code = ? order by t3.catalog_code ";
		String sql2 = sql + "where t3.catalog_code = ? order by t2.itm_code ";
		
		PreparedStatement ps =null;
		if(fm.getQry_item_code()!=null&&!"".equals(fm.getQry_item_code())) {
			ps = conn.prepareStatement(sql1);
			ps.setString(1, fm.getQry_item_code());
		} else {
			if(fm.getQry_category_code()!=null&&!"".equals(fm.getQry_category_code())) {
				ps = conn.prepareStatement(sql2);
				ps.setString(1, fm.getQry_category_code());
			} else {
				return new ArrayList(0);
			}
		}
		try {
			ResultSet rs = ps.executeQuery();
			while (rs.next()) {
				ProductCategoryForm info = new ProductCategoryForm();
				info.setItem_code(rs.getString("itm_code"));
				info.setItem_name(rs.getString("itm_name"));
				info.setCatalogCode(rs.getString("catalog_code"));
				info.setCatalogName(rs.getString("catalog_name"));
				ret.add(info);
			}
			rs.close();
		} finally {
			try {ps.close();} catch(Exception e) {}
		}
		return ret;
	}
	
	/**
	 * 列出产品和分类对应关系
	 * @param conn
	 * @return
	 * @throws Exception
	 */
	public static ArrayList viewItemCategory(Connection conn, ProductCategoryForm fm)throws Exception {
		ArrayList ret = new ArrayList();
		
		String sql = "select t1.itm_code,t2.itm_name,t3.catalog_code,t3.catalog_name " +
				" from prd_item_category_map t1 left join prd_item t2 on t1.itm_code= t2.itm_code " +
				" left join prd_item_category t3 on t1.category_id = t3.catalog_id ";
		String sql1 = sql + "where t1.itm_code = ? order by t3.catalog_code ";
		String sql2 = sql + "where t3.catalog_code = ? order by t2.itm_code ";
		
		PreparedStatement ps =null;
		if(fm.getQry_item_code()!=null&&!"".equals(fm.getQry_item_code())) {
			ps = conn.prepareStatement(sql1);
			ps.setString(1, fm.getQry_item_code());
		} else {
			if(fm.getQry_category_code()!=null&&!"".equals(fm.getQry_category_code())) {
				ps = conn.prepareStatement(sql2);
				ps.setString(1, fm.getQry_category_code());
			} else {
				return new ArrayList(0);
			}
		}
		try {
			ResultSet rs = ps.executeQuery();
			while (rs.next()) {
				ProductCategoryForm info = new ProductCategoryForm();
				info.setItem_code(rs.getString("itm_code"));
				info.setItem_name(rs.getString("itm_name"));
				info.setCatalogCode(rs.getString("catalog_code"));
				info.setCatalogName(rs.getString("catalog_name"));
				ret.add(info);
			}
			rs.close();
		} finally {
			try {ps.close();} catch(Exception e) {}
		}
		return ret;
	}
	
	/**
	 * 新增产品和分类对应关系
	 * @param conn
	 * @return
	 * @throws Exception
	 */
	public static int addItemCategory(Connection conn, ProductCategoryForm fm)throws Exception {
		int ret = 0;
		//String sql = "insert into prd_item_category_map (itm_code,category_id ) " +
		//		" values(?,(select catalog_id from prd_item_cateogyr where catalog_code = ?)) ";
		String sql =" insert into prd_item_category_map (itm_code,category_id ) "
			+ " values(?,?) ";
		PreparedStatement ps = conn.prepareStatement(sql);
		ps.setString(1, fm.getItem_code());
		//ps.setString(2, fm.getCatalogCode());
		ps.setInt(2, Integer.parseInt(fm.getCatalogID()));
		
		try {
			ret = ps.executeUpdate();
		} finally {
			try {ps.close();} catch(Exception e) {}
		}
		return ret;
	}
	
	/**
	 * 新增产品和分类对应关系
	 * @param conn
	 * @return
	 * @throws Exception
	 */
	public static int deleteItemCategory(Connection conn, ProductCategoryForm fm)throws Exception {
		int ret = 0;
		String sql = "delete from  prd_item_category_map where itm_code =? and " +
				" category_id = (select catalog_id from prd_item_cateogyr where catalog_code = ?)) ";
		PreparedStatement ps = conn.prepareStatement(sql);
		ps.setString(1, fm.getItem_code());
		ps.setString(2, fm.getCatalogCode());
		try {
			ret = ps.executeUpdate();
		} finally {
			try {ps.close();} catch(Exception e) {}
		}
		return ret;
	}
	
}