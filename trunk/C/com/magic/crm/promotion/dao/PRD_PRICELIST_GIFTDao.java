package com.magic.crm.promotion.dao;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.*;
import com.magic.crm.promotion.form.PRD_PRICELIST_GIFTForm;
/* 
 * this class is generated by codeGen 0.1 
 * create on Wed Aug 27 21:15:53 CST 2008
 * 
 * todo 
 */ 
public class PRD_PRICELIST_GIFTDao { 

	/** 
	 * 根据主键查询内容  
	 * @param conn 使用连接 
	 * @param info  
	 * @return 0 正常 <0  错误信息  >0 未使用 
	 * @throws SQLException 出现sql异常则抛出 
	 */ 
	public static int selectByPK(Connection conn,PRD_PRICELIST_GIFTForm info) throws SQLException { 
		int ret = 0; 
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		String sql = "select * from PRD_PRICELIST_GIFT where 1=1 and ID=? ";
		try { 
			pstmt = conn.prepareStatement(sql); 
			pstmt.setInt(1,info.getId());
			rs = pstmt.executeQuery();
			if (rs.next()) {
				info.setId(rs.getInt("ID"));
				info.setPricelist_id(rs.getInt("PRICELIST_ID"));
				info.setItem_code(rs.getString("ITEM_CODE"));
				info.setPrice(rs.getDouble("PRICE"));
				info.setQuantity(rs.getInt("QUANTITY"));
				info.setType(rs.getInt("TYPE"));
				info.setStatus(rs.getInt("STATUS"));
			}
		} catch (SQLException e) {
			e.printStackTrace();
			throw e;
		} finally {
			if(rs!=null) try {rs.close();} catch(Exception e) {};
			if(pstmt!=null) try {pstmt.close();} catch(Exception e) {};
		}
		return ret;
	}

	/** 
	 * 取出所有数据  
	 * @param conn 使用连接 
	 * @return ArrayList 包含所有数据的表  
	 * @throws SQLException 出现sql异常则抛出 
	 */ 
	public static ArrayList queryAll(Connection conn) throws SQLException { 
		ArrayList ret = new ArrayList(); 
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		String sql = "select * from PRD_PRICELIST_GIFT";
		try { 
			pstmt = conn.prepareStatement(sql); 
			rs = pstmt.executeQuery();
			while (rs.next()) {
				PRD_PRICELIST_GIFTForm info = new PRD_PRICELIST_GIFTForm();
				info.setId(rs.getInt("ID"));
				info.setPricelist_id(rs.getInt("PRICELIST_ID"));
				info.setItem_code(rs.getString("ITEM_CODE"));
				info.setPrice(rs.getDouble("PRICE"));
				info.setQuantity(rs.getInt("QUANTITY"));
				info.setType(rs.getInt("TYPE"));
				info.setStatus(rs.getInt("STATUS"));
				ret.add(info);
			}
		} catch (SQLException e) {
			e.printStackTrace();
			throw e;
		} finally {
			if(rs!=null) try {rs.close();} catch(Exception e) {};
			if(pstmt!=null) try {pstmt.close();} catch(Exception e) {};
		}
		return ret;
	}
	
	public static ArrayList queryByPricelist(Connection conn,int pricelist_id) throws SQLException { 
		ArrayList ret = new ArrayList(); 
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		String sql = "select t1.*,t2.itm_name from PRD_PRICELIST_GIFT t1 join prd_item t2 on t1.item_code = t2.itm_code where pricelist_id =?";
		try { 
			pstmt = conn.prepareStatement(sql); 
			pstmt.setInt(1, pricelist_id);
			rs = pstmt.executeQuery();
			while (rs.next()) {
				PRD_PRICELIST_GIFTForm info = new PRD_PRICELIST_GIFTForm();
				info.setId(rs.getInt("ID"));
				info.setPricelist_id(rs.getInt("PRICELIST_ID"));
				info.setItem_code(rs.getString("ITEM_CODE"));
				info.setItem_name(rs.getString("ITM_NAME"));
				info.setPrice(rs.getDouble("PRICE"));
				info.setQuantity(rs.getInt("QUANTITY"));
				info.setType(rs.getInt("TYPE"));
				info.setStatus(rs.getInt("STATUS"));
				ret.add(info);
			}
		} catch (SQLException e) {
			e.printStackTrace();
			throw e;
		} finally {
			if(rs!=null) try {rs.close();} catch(Exception e) {};
			if(pstmt!=null) try {pstmt.close();} catch(Exception e) {};
		}
		return ret;
	}
	
	/** 
	 * 插入一条记录  
	 * @param conn 使用连接 
	 * @param info  
	 * @return >0 插入数据条数 <0  错误信息   
	 * @throws SQLException 出现sql异常则抛出 
	 */ 
	public static int insert(Connection conn,PRD_PRICELIST_GIFTForm info) throws SQLException { 
		int ret = 0; 
		PreparedStatement pstmt = null;
		String sql = "insert into PRD_PRICELIST_GIFT(ID,PRICELIST_ID,ITEM_CODE,PRICE) " +
				"values(SEQ_PRD_PRICELIST_GIFT_LINES.nextval,?,?,?) ";
		try { 
			pstmt = conn.prepareStatement(sql); 
			//pstmt.setInt(1,info.getId());
			pstmt.setInt(1,info.getPricelist_id());
			pstmt.setString(2,info.getItem_code());
			pstmt.setDouble(3,info.getPrice());
			//pstmt.setInt(5,info.getQuantity());
			//pstmt.setInt(6,info.getType());
			//pstmt.setInt(7,info.getStatus());
			ret = pstmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
			throw e;
		} finally {
			if(pstmt!=null) try {pstmt.close();} catch(Exception e) {};
		}
		return ret;
	}

	/** 
	 * 更新一条记录  
	 * @param conn 使用连接 
	 * @param info  
	 * @return >0 更新数据条数 <0  错误信息   
	 * @throws SQLException 出现sql异常则抛出 
	 */ 
	public static int updateByPK(Connection conn,PRD_PRICELIST_GIFTForm info) throws SQLException { 
		int ret = 0; 
		PreparedStatement pstmt = null;
		String sql = "update PRD_PRICELIST_GIFT set PRICELIST_ID=?, ITEM_CODE=?, PRICE=?, QUANTITY=?, TYPE=?, STATUS=?where ID = ?  ";
		try { 
			pstmt = conn.prepareStatement(sql); 
			pstmt.setInt(1,info.getPricelist_id());
			pstmt.setString(2,info.getItem_code());
			pstmt.setDouble(3,info.getPrice());
			pstmt.setInt(4,info.getQuantity());
			pstmt.setInt(5,info.getType());
			pstmt.setInt(6,info.getStatus());
			pstmt.setInt(7,info.getId());
			ret = pstmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
			throw e;
		} finally {
			if(pstmt!=null) try {pstmt.close();} catch(Exception e) {};
		}
		return ret;
	}
	
	public static int updateStatus(Connection conn,PRD_PRICELIST_GIFTForm info) throws SQLException { 
		int ret = 0; 
		PreparedStatement pstmt = null;
		String sql = "update PRD_PRICELIST_GIFT set STATUS=?where ID = ?  ";
		try { 
			pstmt = conn.prepareStatement(sql); 
			//pstmt.setInt(1,info.getPricelist_id());
			//pstmt.setString(2,info.getItem_code());
			//pstmt.setDouble(3,info.getPrice());
			//pstmt.setInt(4,info.getQuantity());
			//pstmt.setInt(5,info.getType());
			pstmt.setInt(1,info.getStatus());
			pstmt.setInt(2,info.getId());
			ret = pstmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
			throw e;
		} finally {
			if(pstmt!=null) try {pstmt.close();} catch(Exception e) {};
		}
		return ret;
	}

	/** 
	 * 删除一条记录  
	 * @param conn 使用连接 
	 * @param info  
	 * @return >0 删除数据条数 <0  错误信息   
	 * @throws SQLException 出现sql异常则抛出 
	 */ 
	public static int deleteByPK(Connection conn,PRD_PRICELIST_GIFTForm info) throws SQLException { 
		int ret = 0; 
		PreparedStatement pstmt = null;
		String sql = "delete from PRD_PRICELIST_GIFT where ID = ? ";
		try { 
			pstmt = conn.prepareStatement(sql); 
			pstmt.setInt(1,info.getId());
			ret = pstmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
			throw e;
		} finally {
			if(pstmt!=null) try {pstmt.close();} catch(Exception e) {};
		}
		return ret;
	}
} 