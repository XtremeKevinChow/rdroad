
package com.magic.crm.promotion.action;

/**
 * @author zhuxiang
 *
 */
import java.sql.Connection;
import javax.servlet.http.*;
import org.apache.log4j.Logger;
import org.apache.struts.action.*;
import org.apache.struts.actions.DispatchAction;
import java.util.*;
import com.magic.crm.promotion.form.PRD_PRICELIST_GIFTForm;
import com.magic.crm.promotion.dao.PRD_PRICELIST_GIFTDao;
import com.magic.crm.util.DBManager;
import com.magic.crm.util.Message;
/* 
 * this class is generated by codeGen 0.1 
 * create on Wed Aug 27 21:15:54 CST 2008
 * 
 * todo 
 */ 
public class PRD_PRICELIST_GIFTAction extends DispatchAction { 

	/** 
	 * 查询数据信息action  
	 * @param mapping struts mapping 
	 * @param form struts form 
	 * @param request request 
	 * @param response response 
	 * @return ActionForward 需要迁移的页面  
	 * @throws Exception 出现异常则抛出 
	 */ 
	public ActionForward init(ActionMapping mapping, 
			ActionForm form, 
			HttpServletRequest request, 
			HttpServletResponse response) throws Exception { 
		Connection conn = null; 
		PRD_PRICELIST_GIFTForm fm = (PRD_PRICELIST_GIFTForm) form;
		try { 
			conn = DBManager.getConnection(); 
			//int ret = PRD_PRICELIST_GIFTDao.selectByPK(conn,fm);
		} catch(Exception e) {
			e.printStackTrace();
			Message.setErrorMsg(request,e.getMessage());
			return mapping.findForward("error");
		} finally {
			if(conn!=null) try {conn.close();} catch(Exception e) {};
		}
		return mapping.findForward("addjsp");
	}

	/** 
	 * 显示所有数据action  
	 * @param mapping struts mapping 
	 * @param form struts form 
	 * @param request request 
	 * @param response response 
	 * @return ActionForward 需要迁移的页面  
	 * @throws Exception 出现异常则抛出 
	 */ 
	public ActionForward list(ActionMapping mapping, 
			ActionForm form, 
			HttpServletRequest request, 
			HttpServletResponse response) throws Exception { 
		Connection conn = null; 
		PRD_PRICELIST_GIFTForm fm = (PRD_PRICELIST_GIFTForm) form;
		try { 
			conn = DBManager.getConnection(); 
			int pricelist_id = fm.getPricelist_id();
			ArrayList al = PRD_PRICELIST_GIFTDao.queryByPricelist(conn, pricelist_id);
			request.setAttribute("list",al);
		} catch(Exception e) {
			e.printStackTrace();
			Message.setErrorMsg(request,e.getMessage());
			return mapping.findForward("error");
		} finally {
			if(conn!=null) try {conn.close();} catch(Exception e) {};
		}
		return mapping.findForward("queryjsp");
	}

	/** 
	 * 新增数据action  
	 * @param mapping struts mapping 
	 * @param form struts form 
	 * @param request request 
	 * @param response response 
	 * @return ActionForward 需要迁移的页面  
	 * @throws Exception 出现异常则抛出 
	 */ 
	public ActionForward insert(ActionMapping mapping, 
			ActionForm form, 
			HttpServletRequest request, 
			HttpServletResponse response) throws Exception { 
		Connection conn = null; 
		PRD_PRICELIST_GIFTForm fm = (PRD_PRICELIST_GIFTForm) form;
		try { 
			conn = DBManager.getConnection(); 
			int ret = PRD_PRICELIST_GIFTDao.insert(conn,fm);
		} catch(Exception e) {
			e.printStackTrace();
			Message.setErrorMsg(request,e.getMessage());
			return mapping.findForward("error");
		} finally {
			if(conn!=null) try {conn.close();} catch(Exception e) {};
		}
		return mapping.findForward("query");
	}

	/** 
	 * 更新数据action  
	 * @param mapping struts mapping 
	 * @param form struts form 
	 * @param request request 
	 * @param response response 
	 * @return ActionForward 需要迁移的页面  
	 * @throws Exception 出现异常则抛出 
	 */ 
	public ActionForward update(ActionMapping mapping, 
			ActionForm form, 
			HttpServletRequest request, 
			HttpServletResponse response) throws Exception { 
		Connection conn = null; 
		PRD_PRICELIST_GIFTForm fm = (PRD_PRICELIST_GIFTForm) form;
		try { 
			conn = DBManager.getConnection(); 
			int ret = PRD_PRICELIST_GIFTDao.updateByPK(conn,fm);
		} catch(Exception e) {
			e.printStackTrace();
			Message.setErrorMsg(request,e.getMessage());
			return mapping.findForward("error");
		} finally {
			if(conn!=null) try {conn.close();} catch(Exception e) {};
		}
		return mapping.findForward("query");
	}
	
	public ActionForward valid(ActionMapping mapping, 
			ActionForm form, 
			HttpServletRequest request, 
			HttpServletResponse response) throws Exception { 
		Connection conn = null; 
		PRD_PRICELIST_GIFTForm fm = (PRD_PRICELIST_GIFTForm) form;
		try { 
			conn = DBManager.getConnection(); 
			fm.setStatus(0);
			int ret = PRD_PRICELIST_GIFTDao.updateStatus(conn,fm);
		} catch(Exception e) {
			e.printStackTrace();
			Message.setErrorMsg(request,e.getMessage());
			return mapping.findForward("error");
		} finally {
			if(conn!=null) try {conn.close();} catch(Exception e) {};
		}
		return mapping.findForward("query");
	}
	public ActionForward invalid(ActionMapping mapping, 
			ActionForm form, 
			HttpServletRequest request, 
			HttpServletResponse response) throws Exception { 
		Connection conn = null; 
		PRD_PRICELIST_GIFTForm fm = (PRD_PRICELIST_GIFTForm) form;
		try { 
			conn = DBManager.getConnection(); 
			fm.setStatus(-1);
			int ret = PRD_PRICELIST_GIFTDao.updateStatus(conn,fm);
		} catch(Exception e) {
			e.printStackTrace();
			Message.setErrorMsg(request,e.getMessage());
			return mapping.findForward("error");
		} finally {
			if(conn!=null) try {conn.close();} catch(Exception e) {};
		}
		return mapping.findForward("query");
	}
	/** 
	 * 删除数据action  
	 * @param mapping struts mapping 
	 * @param form struts form 
	 * @param request request 
	 * @param response response 
	 * @return ActionForward 需要迁移的页面  
	 * @throws Exception 出现异常则抛出 
	 */ 
	public ActionForward delete(ActionMapping mapping, 
			ActionForm form, 
			HttpServletRequest request, 
			HttpServletResponse response) throws Exception { 
		Connection conn = null; 
		PRD_PRICELIST_GIFTForm fm = (PRD_PRICELIST_GIFTForm) form;
		try { 
			conn = DBManager.getConnection(); 
			int ret = PRD_PRICELIST_GIFTDao.deleteByPK(conn,fm);
		} catch(Exception e) {
			e.printStackTrace();
			Message.setErrorMsg(request,e.getMessage());
			return mapping.findForward("error");
		} finally {
			if(conn!=null) try {conn.close();} catch(Exception e) {};
		}
		return mapping.findForward("query");
	}
} 