package com.magic.crm.product.dao;


import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Collection;


/**
 * Jdbc Bean Class<br>
 * <br>
 * Autogenerated on 02/15/2005 05:24:46<br>
 * &nbsp;&nbsp;&nbsp; table = "s_tax"
*
* @author Generator
*/
public class TaxDAO implements java.io.Serializable {


   
	public com.magic.crm.product.entity.Tax findByPrimaryKey(Connection con, String id) throws SQLException { 
       PreparedStatement pstmt = null;
       ResultSet rs = null;

       com.magic.crm.product.entity.Tax info = new com.magic.crm.product.entity.Tax();

       try {
          String sQuery = "SELECT id, company_id, Name, description, tax, tax_type FROM s_tax WHERE ";
          pstmt = con.prepareStatement(sQuery);


          rs = pstmt.executeQuery();

          if (rs.next()) {
              info.setID(rs.getInt("id"));
              info.setCompanyID(rs.getInt("company_id"));
              info.setName(rs.getString("Name"));
          } else {
             return null;
          }
       } catch (SQLException e) {
         throw e;
       } finally {
          if (rs != null)
             try { rs.close(); } catch (Exception e) {}
          if (pstmt != null)
             try { pstmt.close(); } catch (Exception e) {}
       }
       return info;
   }
	
	public Collection findAll(Connection con) throws SQLException { 
	       PreparedStatement pstmt = null;
	       ResultSet rs = null;
	       Collection col = new ArrayList();
	       

	       try {
	          String sQuery = "SELECT id, company_id, Name, description, tax, tax_type FROM s_tax ";
	          pstmt = con.prepareStatement(sQuery);

	          rs = pstmt.executeQuery();

	          while (rs.next()) {
	          	  com.magic.crm.product.entity.Tax info = new com.magic.crm.product.entity.Tax();
	              info.setID(rs.getInt("id"));
	              info.setCompanyID(rs.getInt("company_id"));
	              info.setName(rs.getString("Name"));
	              col.add(info);
	          } 
	       } catch (SQLException e) {
	         throw e;
	       } finally {
	          if (rs != null)
	             try { rs.close(); } catch (Exception e) {}
	          if (pstmt != null)
	             try { pstmt.close(); } catch (Exception e) {}
	       }
	       return col;
	   }

   public void insert(Connection con, com.magic.crm.product.entity.Tax info) throws SQLException { 
      PreparedStatement pstmt = null;        

      try {
         String sQuery = "INSERT INTO s_tax(id, company_id, Name, description, tax, tax_type) VALUES(?, ?, ?, ?, ?, ?)";
         pstmt = con.prepareStatement(sQuery);

         pstmt.setInt(1, info.getID());
         pstmt.setInt(2, info.getCompanyID());
         pstmt.setString(3, info.getName());

         pstmt.execute();

         con.commit();
       } catch (SQLException e) {
          if (con != null)
             try { con.rollback(); } catch (Exception ex) {}
          throw e;
       } finally {
          if (pstmt != null)
             try { pstmt.close(); } catch (Exception e) {}
       }
   }

   public void update(Connection con, com.magic.crm.product.entity.Tax info) throws SQLException { 
      PreparedStatement pstmt = null;        

      try {
         String sQuery = "UPDATE s_tax SET id=?, company_id=?, Name=?, description=?, tax=?, tax_type=? WHERE ";
         pstmt = con.prepareStatement(sQuery);

         pstmt.setInt(1, info.getID());
         pstmt.setInt(2, info.getCompanyID());
         pstmt.setString(3, info.getName());

         pstmt.execute();

         con.commit();
       } catch (SQLException e) {
          if (con != null)
             try { con.rollback(); } catch (Exception ex) {}
          throw e;
       } finally {
          if (pstmt != null)
             try { pstmt.close(); } catch (Exception e) {}
       }
   }

   public void delete(Connection con, com.magic.crm.product.entity.Tax info) throws SQLException { 
      PreparedStatement pstmt = null;        

      try {
         String sQuery = "DELETE s_tax WHERE ";
         pstmt = con.prepareStatement(sQuery);


         pstmt.execute();

         con.commit();
       } catch (SQLException e) {
          if (con != null)
             try { con.rollback(); } catch (Exception ex) {}
          throw e;
       } finally {
          if (pstmt != null)
             try { pstmt.close(); } catch (Exception e) {}
       }
   }


}
