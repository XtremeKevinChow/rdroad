/* 
 * @author CodeGen 0.1 
 * create on Tue Nov 18 21:10:43 CST 2008
 * 
 * todo 
 */ 

package com.magic.crm.user.action;

import java.sql.Connection;
import javax.servlet.http.*;
import org.apache.log4j.Logger;
import org.apache.struts.action.*;
import org.apache.struts.actions.DispatchAction;
import java.util.*;

import com.magic.crm.util.*; 
import com.magic.crm.user.form.*;
import com.magic.crm.user.dao.*;

/* 
 * this class is generated by codeGen 0.1 
 * create on Tue Nov 18 21:10:43 CST 2008
 * 
 * todo 
 */ 
public class S_payment_methodAction extends DispatchAction { 

	/** 
	 * 查询数据信息action  
	 * @param mapping struts mapping 
	 * @param form struts form 
	 * @param request request 
	 * @param response response 
	 * @return ActionForward 需要迁移的页面  
	 * @throws Exception 出现异常则抛出 
	 */ 
	public ActionForward view(ActionMapping mapping, 
			ActionForm form, 
			HttpServletRequest request, 
			HttpServletResponse response) throws Exception { 
		Connection conn = null; 
		S_payment_methodForm fm = (S_payment_methodForm) form;
		try { 
			conn = DBManager.getConnection(); 
			int ret = S_payment_methodDao.selectByPK(conn,fm);
		} catch(Exception e) {
			e.printStackTrace();
			Message.setErrorMsg(request,e.getMessage());
			return mapping.findForward("error");
		} finally {
			if(conn!=null) try {conn.close();} catch(Exception e) {};
		}
		return mapping.findForward("view");
	}

	/** 
	 * 查询数据信息action  
	 * @param mapping struts mapping 
	 * @param form struts form 
	 * @param request request 
	 * @param response response 
	 * @return ActionForward 需要迁移的页面  
	 * @throws Exception 出现异常则抛出 
	 */ 
	public ActionForward initAdd(ActionMapping mapping, 
			ActionForm form, 
			HttpServletRequest request, 
			HttpServletResponse response) throws Exception { 
		Connection conn = null; 
		S_payment_methodForm fm = (S_payment_methodForm) form;
		try { 
			conn = DBManager.getConnection(); 
			//int ret = S_PAYMENT_METHODDao.selectByPK(conn,fm);
		} catch(Exception e) {
			e.printStackTrace();
			Message.setErrorMsg(request,e.getMessage());
			return mapping.findForward("error");
		} finally {
			if(conn!=null) try {conn.close();} catch(Exception e) {};
		}
		return mapping.findForward("addjsp");
	}

	/** 
	 * 查询数据信息action  
	 * @param mapping struts mapping 
	 * @param form struts form 
	 * @param request request 
	 * @param response response 
	 * @return ActionForward 需要迁移的页面  
	 * @throws Exception 出现异常则抛出 
	 */ 
	public ActionForward initEdit(ActionMapping mapping, 
			ActionForm form, 
			HttpServletRequest request, 
			HttpServletResponse response) throws Exception { 
		Connection conn = null; 
		S_payment_methodForm fm = (S_payment_methodForm) form;
		try { 
			conn = DBManager.getConnection(); 
			int ret = S_payment_methodDao.selectByPK(conn,fm);
		} catch(Exception e) {
			e.printStackTrace();
			Message.setErrorMsg(request,e.getMessage());
			return mapping.findForward("error");
		} finally {
			if(conn!=null) try {conn.close();} catch(Exception e) {};
		}
		return mapping.findForward("editjsp");
	}

	/** 
	 * 显示所有数据action  
	 * @param mapping struts mapping 
	 * @param form struts form 
	 * @param request request 
	 * @param response response 
	 * @return ActionForward 需要迁移的页面  
	 * @throws Exception 出现异常则抛出 
	 */ 
	public ActionForward list(ActionMapping mapping, 
			ActionForm form, 
			HttpServletRequest request, 
			HttpServletResponse response) throws Exception { 
		Connection conn = null; 
		S_payment_methodForm fm = (S_payment_methodForm) form;
		try { 
			conn = DBManager.getConnection(); 
			ArrayList al = S_payment_methodDao.queryAll(conn);
			request.setAttribute("list",al);
		} catch(Exception e) {
			e.printStackTrace();
			Message.setErrorMsg(request,e.getMessage());
			return mapping.findForward("error");
		} finally {
			if(conn!=null) try {conn.close();} catch(Exception e) {};
		}
		return mapping.findForward("queryjsp");
	}

	/** 
	 * 新增数据action  
	 * @param mapping struts mapping 
	 * @param form struts form 
	 * @param request request 
	 * @param response response 
	 * @return ActionForward 需要迁移的页面  
	 * @throws Exception 出现异常则抛出 
	 */ 
	public ActionForward insert(ActionMapping mapping, 
			ActionForm form, 
			HttpServletRequest request, 
			HttpServletResponse response) throws Exception { 
		Connection conn = null; 
		S_payment_methodForm fm = (S_payment_methodForm) form;
		try { 
			conn = DBManager.getConnection(); 
			int ret = S_payment_methodDao.insert(conn,fm);
		} catch(Exception e) {
			e.printStackTrace();
			Message.setErrorMsg(request,e.getMessage());
			return mapping.findForward("error");
		} finally {
			if(conn!=null) try {conn.close();} catch(Exception e) {};
		}
		return mapping.findForward("query");
	}

	/** 
	 * 更新数据action  
	 * @param mapping struts mapping 
	 * @param form struts form 
	 * @param request request 
	 * @param response response 
	 * @return ActionForward 需要迁移的页面  
	 * @throws Exception 出现异常则抛出 
	 */ 
	public ActionForward update(ActionMapping mapping, 
			ActionForm form, 
			HttpServletRequest request, 
			HttpServletResponse response) throws Exception { 
		Connection conn = null; 
		S_payment_methodForm fm = (S_payment_methodForm) form;
		String id = request.getParameter("payid");
		String value = request.getParameter("txt" + id);
		try { 
			conn = DBManager.getConnection(); 
			//int ret = S_payment_methodDao.updateByPK(conn,fm);
			int ret = S_payment_methodDao.updateDiscount(conn, Integer.parseInt(id), Double.parseDouble(value));
			
			ArrayList al = S_payment_methodDao.queryAll(conn);
			request.setAttribute("list",al);
			
		} catch(Exception e) {
			e.printStackTrace();
			Message.setErrorMsg(request,e.getMessage());
			return mapping.findForward("error");
		} finally {
			if(conn!=null) try {conn.close();} catch(Exception e) {};
		}
		return mapping.findForward("queryjsp");
	}

	/** 
	 * 删除数据action  
	 * @param mapping struts mapping 
	 * @param form struts form 
	 * @param request request 
	 * @param response response 
	 * @return ActionForward 需要迁移的页面  
	 * @throws Exception 出现异常则抛出 
	 */ 
	public ActionForward delete(ActionMapping mapping, 
			ActionForm form, 
			HttpServletRequest request, 
			HttpServletResponse response) throws Exception { 
		Connection conn = null; 
		S_payment_methodForm fm = (S_payment_methodForm) form;
		try { 
			conn = DBManager.getConnection(); 
			int ret = S_payment_methodDao.deleteByPK(conn,fm);
		} catch(Exception e) {
			e.printStackTrace();
			Message.setErrorMsg(request,e.getMessage());
			return mapping.findForward("error");
		} finally {
			if(conn!=null) try {conn.close();} catch(Exception e) {};
		}
		return mapping.findForward("query");
	}
} 