/* 
 * @author CodeGen 0.1 
 * create on Tue Nov 18 21:10:43 CST 2008
 * 
 * todo 
 */ 

package com.magic.crm.user.dao;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.*;
import com.magic.crm.user.form.*;

/* 
 * this class is generated by codeGen 0.1 
 * create on Tue Nov 18 21:10:43 CST 2008
 * 
 * todo 
 */ 
public class S_payment_methodDao { 

	/** 
	 * 根据主键查询内容  
	 * @param conn 使用连接 
	 * @param info  
	 * @return 0 正常 <0  错误信息  >0 未使用 
	 * @throws SQLException 出现sql异常则抛出 
	 */ 
	public static int selectByPK(Connection conn,S_payment_methodForm info) throws SQLException { 
		int ret = 0; 
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		String sql = "select * from s_payment_method where 1=1 and id=? ";
		try { 
			pstmt = conn.prepareStatement(sql); 
			pstmt.setInt(1,info.getId());
			rs = pstmt.executeQuery();
			if (rs.next()) {
				info.setId(rs.getInt("id"));
				info.setName(rs.getString("name"));
				info.setDescription(rs.getString("description"));
				info.setPerson_use(rs.getString("person_use"));
				info.setOrg_use(rs.getString("org_use"));
				info.setRef_dept(rs.getString("ref_dept"));
				info.setBank(rs.getString("bank"));
				info.setDiscount(rs.getInt("discount"));
			}
		} catch (SQLException e) {
			e.printStackTrace();
			throw e;
		} finally {
			if(rs!=null) try {rs.close();} catch(Exception e) {};
			if(pstmt!=null) try {pstmt.close();} catch(Exception e) {};
		}
		return ret;
	}

	/** 
	 * 取出所有数据  
	 * @param conn 使用连接 
	 * @return ArrayList 包含所有数据的表  
	 * @throws SQLException 出现sql异常则抛出 
	 */ 
	public static ArrayList queryAll(Connection conn) throws SQLException { 
		ArrayList ret = new ArrayList(); 
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		String sql = "select * from s_payment_method where person_use='Y'";
		try { 
			pstmt = conn.prepareStatement(sql); 
			rs = pstmt.executeQuery();
			while (rs.next()) {
				S_payment_methodForm info = new S_payment_methodForm();
				info.setId(rs.getInt("id"));
				info.setName(rs.getString("name"));
				info.setDescription(rs.getString("description"));
				info.setPerson_use(rs.getString("person_use"));
				info.setOrg_use(rs.getString("org_use"));
				info.setRef_dept(rs.getString("ref_dept"));
				info.setBank(rs.getString("bank"));
				info.setDiscount(rs.getDouble("discount"));
				ret.add(info);
			}
		} catch (SQLException e) {
			e.printStackTrace();
			throw e;
		} finally {
			if(rs!=null) try {rs.close();} catch(Exception e) {};
			if(pstmt!=null) try {pstmt.close();} catch(Exception e) {};
		}
		return ret;
	}

	/** 
	 * 插入一条记录  
	 * @param conn 使用连接 
	 * @param info  
	 * @return >0 插入数据条数 <0  错误信息   
	 * @throws SQLException 出现sql异常则抛出 
	 */ 
	public static int insert(Connection conn,S_payment_methodForm info) throws SQLException { 
		int ret = 0; 
		PreparedStatement pstmt = null;
		String sql = "insert into s_payment_method(id,name,description,person_use,org_use,ref_dept,bank,discount) values(?,?,?,?,?,?,?,?) ";
		try { 
			pstmt = conn.prepareStatement(sql); 
			pstmt.setInt(1,info.getId());
			pstmt.setString(2,info.getName());
			pstmt.setString(3,info.getDescription());
			pstmt.setString(4,info.getPerson_use());
			pstmt.setString(5,info.getOrg_use());
			pstmt.setString(6,info.getRef_dept());
			pstmt.setString(7,info.getBank());
			pstmt.setDouble(8,info.getDiscount());
			ret = pstmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
			throw e;
		} finally {
			if(pstmt!=null) try {pstmt.close();} catch(Exception e) {};
		}
		return ret;
	}

	/** 
	 * 更新一条记录  
	 * @param conn 使用连接 
	 * @param info  
	 * @return >0 更新数据条数 <0  错误信息   
	 * @throws SQLException 出现sql异常则抛出 
	 */ 
	public static int updateByPK(Connection conn,S_payment_methodForm info) throws SQLException { 
		int ret = 0; 
		PreparedStatement pstmt = null;
		String sql = "update s_payment_method set name=?, description=?, person_use=?, org_use=?, ref_dept=?, bank=?, discount=?where id = ?  ";
		try { 
			pstmt = conn.prepareStatement(sql); 
			pstmt.setString(1,info.getName());
			pstmt.setString(2,info.getDescription());
			pstmt.setString(3,info.getPerson_use());
			pstmt.setString(4,info.getOrg_use());
			pstmt.setString(5,info.getRef_dept());
			pstmt.setString(6,info.getBank());
			pstmt.setDouble(7,info.getDiscount());
			pstmt.setInt(8,info.getId());
			ret = pstmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
			throw e;
		} finally {
			if(pstmt!=null) try {pstmt.close();} catch(Exception e) {};
		}
		return ret;
	}
	
	/** 
	 * 更新一条记录  
	 * @param conn 使用连接 
	 * @param info  
	 * @return >0 更新数据条数 <0  错误信息   
	 * @throws SQLException 出现sql异常则抛出 
	 */ 
	public static int updateDiscount(Connection conn,int id,double discount) throws SQLException { 
		int ret = 0; 
		PreparedStatement pstmt = null;
		String sql = "update s_payment_method set discount=? where id = ?  ";
		try { 
			pstmt = conn.prepareStatement(sql); 
			pstmt.setDouble(1,discount);
			pstmt.setInt(2,id);
			ret = pstmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
			throw e;
		} finally {
			if(pstmt!=null) try {pstmt.close();} catch(Exception e) {};
		}
		return ret;
	}

	/** 
	 * 删除一条记录  
	 * @param conn 使用连接 
	 * @param info  
	 * @return >0 删除数据条数 <0  错误信息   
	 * @throws SQLException 出现sql异常则抛出 
	 */ 
	public static int deleteByPK(Connection conn,S_payment_methodForm info) throws SQLException { 
		int ret = 0; 
		PreparedStatement pstmt = null;
		String sql = "delete from s_payment_method where id = ? ";
		try { 
			pstmt = conn.prepareStatement(sql); 
			pstmt.setInt(1,info.getId());
			ret = pstmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
			throw e;
		} finally {
			if(pstmt!=null) try {pstmt.close();} catch(Exception e) {};
		}
		return ret;
	}
} 